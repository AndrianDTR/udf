#ifndef __udfChampionshipCategoriesMngrDlg__
#define __udfChampionshipCategoriesMngrDlg__

/**
@file
Subclass of ChampionshipCategoriesMngrDlg, which is generated by wxFormBuilder.
*/

#include "udf.h"

#include "db.h"
#include "cdbmanager.h"

typedef enum{
	CTIT_BLOCK = 0,
	CTIT_CAT,
}eCAT_TREE_ITEM_TYPE;

typedef enum{
	TIS_UNCHECKED = 0,
	TIS_3STATE,
	TIS_CHECKED
}eTREE_ITEM_STATE;

class udfCatTreeItemData : public wxTreeItemData
{
public:
    udfCatTreeItemData(const unsigned long nId, eCAT_TREE_ITEM_TYPE type) : m_nId(nId), m_type(type) { }

    unsigned long	GetId() const {return m_nId; }
	eCAT_TREE_ITEM_TYPE		GetType()const {return m_type; }

private:
	eCAT_TREE_ITEM_TYPE		m_type;
    unsigned long 	m_nId;
};

/** Implementing ChampionshipCategoriesMngrDlg */
class udfChampionshipCategoriesMngrDlg : public ChampionshipCategoriesMngrDlg
{
	typedef std::map<unsigned int, wxTreeItemId>	UI2IdMap;

private:
	wxImageList* 								m_states;
	wxTreeItemId								m_root;

	unsigned int 								m_nCSId;
	CDbConnection*								m_pCon;

protected:
	// Handlers for ChampionshipCategoriesMngrDlg events.
	void OnStateToggle( wxTreeEvent& event );
	void OnSave( wxCommandEvent& event );
	void OnDiscard( wxCommandEvent& event );

public:
	/** Constructor */
	udfChampionshipCategoriesMngrDlg( wxWindow* parent, unsigned int nId );
	virtual ~udfChampionshipCategoriesMngrDlg();

protected:
	void 			Refresh();
	wxTreeItemId	SetParentState(wxTreeItemId item);
};

#endif // __udfChampionshipCategoriesMngrDlg__
